// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "10/24/2023 19:43:45"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module full_adderV (
	fsum,
	fcarry_out,
	a,
	b,
	c);
output 	fsum;
output 	fcarry_out;
input 	a;
input 	b;
input 	c;

// Design Ports Information
// fsum	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// fcarry_out	=>  Location: PIN_32,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("full_adder_6_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \fsum~output_o ;
wire \fcarry_out~output_o ;
wire \a~input_o ;
wire \c~input_o ;
wire \b~input_o ;
wire \HA2|sum1~0_combout ;
wire \or1~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y8_N16
cycloneive_io_obuf \fsum~output (
	.i(\HA2|sum1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\fsum~output_o ),
	.obar());
// synopsys translate_off
defparam \fsum~output .bus_hold = "false";
defparam \fsum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \fcarry_out~output (
	.i(\or1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\fcarry_out~output_o ),
	.obar());
// synopsys translate_off
defparam \fcarry_out~output .bus_hold = "false";
defparam \fcarry_out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneive_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N1
cycloneive_io_ibuf \c~input (
	.i(c),
	.ibar(gnd),
	.o(\c~input_o ));
// synopsys translate_off
defparam \c~input .bus_hold = "false";
defparam \c~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N15
cycloneive_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X2_Y7_N0
cycloneive_lcell_comb \HA2|sum1~0 (
// Equation(s):
// \HA2|sum1~0_combout  = \a~input_o  $ (\c~input_o  $ (\b~input_o ))

	.dataa(gnd),
	.datab(\a~input_o ),
	.datac(\c~input_o ),
	.datad(\b~input_o ),
	.cin(gnd),
	.combout(\HA2|sum1~0_combout ),
	.cout());
// synopsys translate_off
defparam \HA2|sum1~0 .lut_mask = 16'hC33C;
defparam \HA2|sum1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X2_Y7_N2
cycloneive_lcell_comb \or1~0 (
// Equation(s):
// \or1~0_combout  = (\a~input_o  & ((\c~input_o ) # (\b~input_o ))) # (!\a~input_o  & (\c~input_o  & \b~input_o ))

	.dataa(gnd),
	.datab(\a~input_o ),
	.datac(\c~input_o ),
	.datad(\b~input_o ),
	.cin(gnd),
	.combout(\or1~0_combout ),
	.cout());
// synopsys translate_off
defparam \or1~0 .lut_mask = 16'hFCC0;
defparam \or1~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign fsum = \fsum~output_o ;

assign fcarry_out = \fcarry_out~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_101,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
